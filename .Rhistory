confusionMatrix(predictions2,testing$diagnosis)
ldaFit <- train( diagnosis ~ .,method="lda",data=training,prox=TRUE)
predictions3 <- predict(ldaFit,newdata=testing)
confusionMatrix(predictions3,testing$diagnosis)
predDF <- data.frame(predictions1,predictions2,predictions3,diagnosis=testing$diagnosis)
predDF
model <- train( diagnosis ~ .,method="rf",data=training,prox=TRUE)
predictions1 <- predict(model,newdata=testing)
confusionMatrix(predictions1,testing$diagnosis)#Accuracy : 0.7683
fitControl <- trainControl(## 10-fold CV
method = "repeatedcv",
number = 10,
## repeated ten times
repeats = 10)
fitControl <- trainControl(## 10-fold CV
method = "repeatedcv",
number = 10,
## repeated ten times
repeats = 10)
gbmFit1 <- train(Class ~ ., data = training,
method = "gbm",
trControl = fitControl,
## This last option is actually one
## for gbm() that passes through
verbose = FALSE)
gbmFit1
gbmFit <- train( diagnosis ~ .,method="gbm",trControl = fitControl,data=training, verbose = FALSE)
predictions2 <- predict(gbmFit,newdata=testing)
confusionMatrix(predictions2,testing$diagnosis)
library(ElemStatLearn)
library(caret)
data(vowel.train)
data(vowel.test)
library(caret)
library(gbm)
set.seed(3433)
library(AppliedPredictiveModeling)
data(AlzheimerDisease)
adData = data.frame(diagnosis,predictors)
inTrain = createDataPartition(adData$diagnosis, p = 3/4)[[1]]
training = adData[ inTrain,]
testing = adData[-inTrain,]
set.seed(62433)
model <- train( diagnosis ~ .,method="rf",data=training,prox=TRUE)
predictions1 <- predict(model,newdata=testing)
confusionMatrix(predictions1,testing$diagnosis)#Accuracy : 0.7683
fitControl <- trainControl(## 10-fold CV
method = "repeatedcv",
number = 10,
## repeated ten times
repeats = 10)
set.seed(825)
fitControl <- trainControl(## 10-fold CV
method = "repeatedcv",
number = 10,
## repeated ten times
repeats = 10)
gbmFit1 <- train(Class ~ ., data = training,
method = "gbm",
trControl = fitControl,
## This last option is actually one
## for gbm() that passes through
verbose = FALSE)
gbmFit1
gbmFit <- train( diagnosis ~ .,method="gbm",trControl = fitControl,data=training, verbose = FALSE)
predictions2 <- predict(gbmFit,newdata=testing)
confusionMatrix(predictions2,testing$diagnosis)
gbmFit <- train( diagnosis ~ .,method="gbm",trControl = fitControl,data=training, verbose = FALSE)
predictions2 <- predict(gbmFit,newdata=testing)
confusionMatrix(predictions2,testing$diagnosis)
ldaFit <- train( diagnosis ~ .,method="lda",data=training,prox=TRUE)
predictions3 <- predict(ldaFit,newdata=testing)
confusionMatrix(predictions3,testing$diagnosis)
predDF <- data.frame(predictions1,predictions2,predictions3,diagnosis=testing$diagnosis)
predDF
combModFit <- train(diagnosis ~.,method="gam",data=predDF)
combModFit
combPredV <- predict(combModFit,predVDF)
predVDF <- data.frame(pred1=predictions1,pred2=predictions2,pred3=predictions3)
combPredV <- predict(combModFit,predVDF)
combpredV
combPredV
par(bg="lavenderblush1")
plot(c(0,41),c(0,38),type="n",xlab="",ylab="",main="Casa Nostra by A&J",col.main="gray48", axes=FALSE)
polygon(c(6,18,18,14,13,10,9,6),c(6,6,7,7,8,8,7,7),col="red",lwd=2)
points(8.210608,5.941903,lwd=8,col="black")
points(14.94757,6.009516,lwd=8,col="black")
polygon (c(5.987411,8.951674,9.962218,6.997956),c(7.023706,7.023706,10.336728,9.390150),col="blue")
lines (c(8.951674,9.962218,10.770654,9.827479),c(7.023706,8.037896,11.283306,10.336728),lwd=2)
polygon (c(10.770654,9.962218,13.061220,13.600177),c(11.283306,8.105509,8.037896,11.215693), col="blue")
polygon (c(13.60018,13.06122,13.86966,14.34124),c(11.215693,8.105509,7.091319,10.269115),lwd=2)
polygon (c(14.34124,18.92238,17.97920,14.00439),c(10.336728,10.269115,7.023706,7.091319),col="blue")
polygon (c(17.97920,17.97920,18.98975,18.98975),c(7.023706,6.009516,9.322538,10.201503),col="red",lwd=2)
points(18,7,lwd=3,col="yellow")
points(18.78764,9.052087,lwd=4,col="yellow")
polygon(c(9.086413,9.019044,13.734916,13.734916),c(5.941903,6.956093,6.956093,6.009516),lwd=3,col="red")
polygon(c(9.019044,9.962218,13.061220,13.869656),c(7.023706,7.970284,7.970284,7.023706),lwd=2,col="white")
polygon (c(42.44776,27.34294,26.99965,42.56219),c(31.56807,31.46102,18.07934,17.43702), col="lemonchiffon3")
polygon (c(42.44776,29.97484,28.71611,42.44776),c(28.24942,29.10584,19.79220,20.22041),col="skyblue3",lwd=3)
points (c(0.00593343),c(37.77717), col="yellow", lwd=40)
polygon (c(8.2330577,0.5662187,17.50192),c(33.17387,27.39299,27.50004), col="magenta",lwd=3)
polygon (c(2.168245,15.442175,15.442175,2.053814),c(27.17888,27.17888,15.08184,15.08184),col="brown",lwd=3)
polygon (c(8.461919,12.352553,21.163697,17.501923),c(33.28093,38.74065,33.60209,27.50004), col="magenta", lwd=3)
polygon (c(0.5662187,8.3474881,12.3525532,8.1186272),c(27.39299,33.28093,38.63360,34.67262), col="magenta3", lwd=3)
polygon (c(19.90496,19.90496,15.67104,15.67104,17.73078),c(31.35396,19.79220,15.18890,27.17888,27.28593), col="brown2",lwd=3)
polygon (c(2.397106,2.397106,6.516601,6.516601),c(25.78719,22.57558,22.57558,25.78719),col="white",lwd=2)
polygon (c(15.32774,15.21331,10.86496,10.86496),c(25.89424,22.36148,22.25442,25.46603),col="white",lwd=2)
polygon (c(5.143436,5.257866,12.009262,11.780401),c(15.08184,20.86273,20.86273,15.08184), col="antiquewhite3", lwd=2)
polygon (c(42.44776,34.20877,35.23864,42.44776), c(16.9017529,14.1183639,-0.2267947,2.5565943), col="magenta", lwd=3)
polygon (c(36.72624,36.84067,42.56219,42.56219),c(0.09436561,-1.51143573,-1.40438230,2.23543406), col="brown2", lwd=3)
polygon (c(40.04472,39.93029,42.56219,42.56219),c(-0.3338481,-1.2973289,-0.3338481,-1.2973289), col="white", lwd=2)
polygon (c(-1.607959,34.552057,35.238640,36.382944,36.611805,-1.379099), c(3.9482888,3.8412354,-0.2267947,-0.1197412,-1.4043823,-1.4043823), col="green")
polygon (c(2.053814,-1.493529,-1.607959,34.323196,34.208766,42.333326,27.114079,18.188505,15.556605,2.053814), c(18.18639,18.07934,12.51256,12.29846,14.01131,17.11586,17.86523,17.97229,14.86774,14.86774),col="green")
polygon (c(-1.622634,4.641414), c(8.230426,8.016319), col="black", lwd=7)
polygon (c(21.74023,30.10988), c(8.230426,8.123372), col="black", lwd=7)
polygon (c(7.055303,-1.542608,-1.618695,11.087951), c(39.38297,31.67513,27.60710,39.27592), col="snow2", lwd=3)
polygon (c(42.512173,42.588260,17.631494,12.381442,9.870548,11.087951), c(39.59708,36.06432,35.95726,39.06181,38.09833,39.38297), col="snow2", lwd=3)
polygon (c(8.881408,6.979215,10.859688,12.381442), c(35.74316,35.52905,39.27592,39.27592), col="snow2", lwd=0.01)
lines (c(15.73613,42.47897), c(37.45601,37.88422), col="chocolate", lwd=9)
lines (c(-1.613161,8.738904), c(29.96227,39.38297), col="chocolate", lwd=9)
polygon (c(42.57482,17.94074,21.39143,20.14535,20.04949,18.51585,26.85502,27.33428,42.47897), c(35.95726,35.85021,33.70914,31.24691,20.00630,18.18639,17.86523,31.46102,31.56807), col="orange", lwd=3)
polygon (c(8.6430513,7.1094121,-1.6131613,-1.5173089,1.9333795,2.0292320,0.4955927), c(35.52905,35.63610,27.17888,18.18639,18.18639,27.17888,27.28593), col="orange", lwd=3)
lines (c(41.23289,41.04118), c(32.63861,33.81619), lwd=3, col="green")
points (c(40.94533), c(33.92325), col="yellow", lwd=7)
points (c(40.94533), c(33.92325), col="red", lwd=3)
lines (c(37.97390,37.87805), c(34.56557,33.28093), col="green", lwd=3)
points (c(37.87805), c(34.56557), col="yellow", lwd=7)
points (c(37.87805), c(34.56557), col="red", lwd=3)
lines (c(35.29003,35.19418), c(32.10334,33.49503), col="green", lwd=3)
points (c(35.09833), c(33.38798), col="yellow", lwd=7)
points (c(35.09833), c(33.38798), col="red", lwd=3)
lines (c(32.41446,32.22276), c(32.85271,34.13735), col="green", lwd=3)
points (c(32.22276), c(33.92325), col="yellow", lwd=7)
points (c(32.22276), c(33.92325), col="red", lwd=3)
segments(21,29,29,21,col=”yellow”,lwd=4)
segments(21,29,29,21,col="yellow”,lwd=4)
segments(21,29,29,21,col="yellow",lwd=4)
segments(21,29,29,21,col="yellow",lwd=4)
plot(1:30,type=”n”)
plot(1:30,type="n")
>rect(1,0,30,10,col="yellow",border="transparent")
rect(1,0,30,10,col="yellow",border="transparent")
rect(1,10,30,18,col="blue",border="transparent")
rect(1,18,30,30,col="lightblue",border="transparent")
points(25,25,pch=16,col="yellow",cex=5)
segments(25,30,25,20,col="yellow",lwd=4)
segments(20,25,30,25,col="yellow",lwd=4)
segments(29,29,21,21,col="yellow",lwd=4)
segments(21,29,29,21,col="yellow",lwd=4)
rect(15,5,16,15,col="black")
x=c(15,22)
x=rbind(x,c(8,15))
x=rbind(x,c(23,15))
x
x=c(15,22)x=rbind(x,c(8,15))x=rbind(x,c(23,15))x=rbind(x,c(16,15))x=rbind(x,c(15,15))x=rbind(x,c(11,15))x=rbind(x,c(20,15))x=rbind(x,c(11,17))x=rbind(x,c(20,17))x=rbind(x,c(9,16))x=rbind(x,c(22,16))x=rbind(x,c(13,19))x=rbind(x,c(18,19))
x=c(15,22)
x=rbind(x,c(8,15))
x=rbind(x,c(23,15))
x=rbind(x,c(16,15))
x=rbind(x,c(15,15))
x=rbind(x,c(11,15))
x=rbind(x,c(20,15))
x=rbind(x,c(11,17))
x=rbind(x,c(20,17))
x=rbind(x,c(9,16))
x=rbind(x,c(22,16))
x=rbind(x,c(13,19))
x=rbind(x,c(18,19))
x
>polygon(x,col="red",lwd=2)
polygon(x,col="red",lwd=2)
polygon(x[,1],x[,2],col="red",lwd=2)
plot(1:30,type="n")rect(1,0,30,10,col="yellow",border="transparent")rect(1,10,30,18,col="blue",border="transparent")rect(1,18,30,30,col="lightblue",border="transparent")points(25,25,pch=16,col="yellow",cex=5)segments(25,30,25,20,col="yellow",lwd=4)segments(20,25,30,25,col="yellow",lwd=4)segments(29,29,21,21,col="yellow",lwd=4)segments(21,29,29,21,col="yellow",lwd=4)#Ombrellone:rect(15,5,16,15,col="black")x=c(15,22)x=rbind(x,c(8,15))x=rbind(x,c(23,15))x=rbind(x,c(16,15))x=rbind(x,c(15,15))x=rbind(x,c(11,15))x=rbind(x,c(20,15))x=rbind(x,c(11,17))x=rbind(x,c(20,17))x=rbind(x,c(9,16))x=rbind(x,c(22,16))x=rbind(x,c(13,19))x=rbind(x,c(18,19))
x=c(15,22)x=rbind(x,c(8,15))x=rbind(x,c(23,15))x=rbind(x,c(16,15))x=rbind(x,c(15,15))x=rbind(x,c(11,15))x=rbind(x,c(20,15))x=rbind(x,c(11,17))x=rbind(x,c(20,17))x=rbind(x,c(9,16))x=rbind(x,c(22,16))x=rbind(x,c(13,19))
x=c(15,22)
x=rbind(x,c(8,15))
x=rbind(x,c(23,15))
x=rbind(x,c(16,15))
x=rbind(x,c(15,15))
x=rbind(x,c(11,15))
x=rbind(x,c(20,15))
x=rbind(x,c(11,17))
x=rbind(x,c(20,17))
x=rbind(x,c(9,16))
x=rbind(x,c(22,16))
x=rbind(x,c(13,19))
x=rbind(x,c(18,19))
polygon(x[,1],x[,2],col="red",lwd=2)
plot(1:30,type="n")rect(1,0,30,10,col="yellow",border="transparent")rect(1,10,30,18,col="blue",border="transparent")rect(1,18,30,30,col="lightblue",border="transparent")points(25,25,pch=16,col="yellow",cex=5)segments(25,30,25,20,col="yellow",lwd=4)segments(20,25,30,25,col="yellow",lwd=4)segments(29,29,21,21,col="yellow",lwd=4)segments(21,29,29,21,col="yellow",lwd=4)#Ombrellone:rect(15,5,16,15,col="black")
plot(1:30,type="n")
rect(1,0,30,10,col="yellow",border="transparent")rect(1,10,30,18,col="blue",border="transparent")rect(1,18,30,30,col="lightblue",border="transparent")points(25,25,pch=16,col="yellow",cex=5)segments(25,30,25,20,col="yellow",lwd=4)segments(20,25,30,25,col="yellow",lwd=4)segments(29,29,21,21,col="yellow",lwd=4)segments(21,29,29,21,col="yellow",lwd=4)
plot(1:30,type="n")
rect(1,0,30,10,col="yellow",border="transparent")
rect(1,10,30,18,col="blue",border="transparent")
rect(1,18,30,30,col="lightblue",border="transparent")
points(25,25,pch=16,col="yellow",cex=5)
segments(25,30,25,20,col="yellow",lwd=4)
segments(20,25,30,25,col="yellow",lwd=4)
segments(29,29,21,21,col="yellow",lwd=4)
segments(21,29,29,21,col="yellow",lwd=4)
#Ombrellone:
rect(15,5,16,15,col="black")
x=c(15,22)
x=rbind(x,c(8,15))
x=rbind(x,c(23,15))
x=rbind(x,c(16,15))
x=rbind(x,c(15,15))
x=rbind(x,c(11,15))
x=rbind(x,c(20,15))
x=rbind(x,c(11,17))
x=rbind(x,c(20,17))
x=rbind(x,c(9,16))
x=rbind(x,c(22,16))
x=rbind(x,c(13,19))
x=rbind(x,c(18,19))
polygon(x[,1],x[,2],col="red",lwd=2)
segments(18,4,18,6,col="black",lwd=4)
segments(20,3,20,5,col="black",lwd=4)
segments(23,5,23,7,col="black",lwd=4)
polygon(x,y,col="orange",lwd=2)
x=c(18,23,20,12)
y=c(6,7,5,8)
polygon(x,y,col="orange",lwd=2)
x=c(23,21,24,21)
y=c(7,8,10,11)
polygon(x,col="orange",lwd=2)
y=c(2016,20,16)
polygon(x,y,col="brown",lwd=1)
y=c(20,16,20,16)
polygon(x,y,col="brown",lwd=1)
points(5,24,pch=17,col="white",cex=5)
segments(5,19,5,27,col="brown",lwd=4)
Y=C(6,4,8,4,6,7,7,5.5,4,4.4)
Y=C(6,4,8,4,6,7,7,5.5,4,4.4)
y=C(6,4,8,4,6,7,7,5.5,4,4.4)
polygon(x,y,col="coral",lwd=1)
y=c(6,4,8,4,6,7,7,5.5,4,4.4)
polygon(x,y,col="coral",lwd=1)
y=c(6,4,8,4,6,7,7,5.5,5,5.5)
polygon(x,y,col="coral",lwd=1)
x=c(7,8,9,10,11,8.5,9.5,8.5,9.5,9.5)
y=c(6,4,8,4,6,7,7,5.5,5,5.5)
polygon(x,y,col="coral",lwd=1)
polygon(x-3,y,col="peachpuff",lwd=1)
title(main="Buone Vacanze",font.main=9,col.main="red")
plot(1:30,type="n")
rect(1,0,30,10,col="yellow",border="transparent")
rect(1,10,30,18,col="blue",border="transparent")
rect(1,18,30,30,col="lightblue",border="transparent")
points(25,25,pch=16,col="yellow",cex=5)
segments(25,30,25,20,col="yellow",lwd=4)
segments(20,25,30,25,col="yellow",lwd=4)
segments(29,29,21,21,col="yellow",lwd=4)
segments(21,29,29,21,col="yellow",lwd=4)
x=c(15,22,8,15,23,15,16,15,15,15,11,15,20,15,11,17,20,17,9,16,22,16,13,19,18,19)
length(x)
polygon(x[1:13],x[14:26],col="red",lwd=2)
x=matrix(x,ncol=2)
x
polygon(x,col="red",lwd=2)
plot(1:30,type="n")
rect(1,0,30,10,col="yellow",border="transparent")
rect(1,10,30,18,col="blue",border="transparent")
rect(1,18,30,30,col="lightblue",border="transparent")
points(25,25,pch=16,col="yellow",cex=5)
segments(25,30,25,20,col="yellow",lwd=4)
segments(20,25,30,25,col="yellow",lwd=4)
segments(29,29,21,21,col="yellow",lwd=4)
segments(21,29,29,21,col="yellow",lwd=4)
#Ombrellone:
rect(15,5,16,15,col="black")
x=c(15,22,8,15,23,15,16,15,15,15,11,15,20,15,11,17,20,17,9,16,22,16,13,19,18,19)
length(x)
x=matrix(x,ncol=2)
x
polygon(x,col="red",lwd=2)
x=matrix(x,ncol=2,byrow=T)
polygon(x,col="red",lwd=2)
plot(1:30,type="n")rect(1,0,30,10,col="yellow",border="transparent")rect(1,10,30,18,col="blue",border="transparent")rect(1,18,30,30,col="lightblue",border="transparent")points(25,25,pch=16,col="yellow",cex=5)segments(25,30,25,20,col="yellow",lwd=4)segments(20,25,30,25,col="yellow",lwd=4)segments(29,29,21,21,col="yellow",lwd=4)segments(21,29,29,21,col="yellow",lwd=4)#Ombrellone:rect(15,5,16,15,col="black")x=c(15,22,8,15,23,15,16,15,15,15,11,15,20,15,11,17,20,17,9,16,22,16,13,19,18,19)length(x)x=matrix(x,ncol=2,byrow=T)xpolygon(x,col="red",lwd=2)
polygon(x,col="red",lwd=2)
plot(1:30,type="n")rect(1,0,30,10,col="yellow",border="transparent")rect(1,10,30,18,col="blue",border="transparent")rect(1,18,30,30,col="lightblue",border="transparent")points(25,25,pch=16,col="yellow",cex=5)segments(25,30,25,20,col="yellow",lwd=4)segments(20,25,30,25,col="yellow",lwd=4)segments(29,29,21,21,col="yellow",lwd=4)segments(21,29,29,21,col="yellow",lwd=4)
plot(1:30,type="n")
rect(1,0,30,10,col="yellow",border="transparent")
rect(1,10,30,18,col="blue",border="transparent")
rect(1,18,30,30,col="lightblue",border="transparent")
points(25,25,pch=16,col="yellow",cex=5)
segments(25,30,25,20,col="yellow",lwd=4)
segments(20,25,30,25,col="yellow",lwd=4)
segments(29,29,21,21,col="yellow",lwd=4)
segments(21,29,29,21,col="yellow",lwd=4)
#Ombrellone:
rect(15,5,16,15,col="black")
x=c(15,22,8,15,23,15,16,15,15,15,11,15,20,15,11,17,20,17,9,16,22,16,13,19,18,19)
length(x)
x=matrix(x,ncol=2,byrow=T)
x
polygon(x,col="red",lwd=2)
segments(18,4,18,6,col="black",lwd=4)
segments(20,3,20,5,col="black",lwd=4)
segments(23,5,23,7,col="black",lwd=4)
x=c(18,23,20,12)
y=c(6,7,5,8)
polygon(x,y,col="orange",lwd=2)
x=c(18,23,20,21)
y=c(6,7,5,8)
polygon(x,y,col="orange",lwd=2)
plot(1:30,type="n")rect(1,0,30,10,col="yellow",border="transparent")rect(1,10,30,18,col="blue",border="transparent")rect(1,18,30,30,col="lightblue",border="transparent")points(25,25,pch=16,col="yellow",cex=5)segments(25,30,25,20,col="yellow",lwd=4)segments(20,25,30,25,col="yellow",lwd=4)segments(29,29,21,21,col="yellow",lwd=4)segments(21,29,29,21,col="yellow",lwd=4)
segments(21,29,29,21,col="yellow",lwd=4)
#Ombrellone:
rect(15,5,16,15,col="black")
x=c(15,22,8,15,23,15,16,15,15,15,11,15,20,15,11,17,20,17,9,16,22,16,13,19,18,19)
length(x)
x=matrix(x,ncol=2,byrow=T)
x
polygon(x,col="red",lwd=2)
#Sdraio:
segments(18,4,18,6,col="black",lwd=4)
segments(20,3,20,5,col="black",lwd=4)
plot(1:30,type="n")
rect(1,0,30,10,col="yellow",border="transparent")
rect(1,10,30,18,col="blue",border="transparent")
rect(1,18,30,30,col="lightblue",border="transparent")
points(25,25,pch=16,col="yellow",cex=5)
segments(25,30,25,20,col="yellow",lwd=4)
segments(20,25,30,25,col="yellow",lwd=4)
segments(29,29,21,21,col="yellow",lwd=4)
segments(21,29,29,21,col="yellow",lwd=4)
rect(15,5,16,15,col="black")
x=c(15,22,8,15,23,15,16,15,15,15,11,15,20,15,11,17,20,17,9,16,22,16,13,19,18,19)
length(x)
x=matrix(x,ncol=2,byrow=T)
x
polygon(x,col="red",lwd=2)
segments(18,4,18,6,col="black",lwd=4)
segments(20,3,20,5,col="black",lwd=4)
segments(23,5,23,7,col="black",lwd=4)
x=c(18,23,20,21)
y=c(6,7,5,8)
polygon(x,y,col="orange",lwd=2)
x=c(23,21,24,21)
y=c(7,8,10,11)
polygon(x,col="orange",lwd=2)
x=c(2,4,9,7)
y=c(20,16,20,16)
polygon(x,y,col="brown",lwd=1)
points(5,24,pch=17,col="white",cex=5)
segments(5,19,5,27,col="brown",lwd=4)
x=c(7,8,9,10,11,8.5,9.5,8.5,9.5,9.5)
y=c(6,4,8,4,6,7,7,5.5,5,5.5)
polygon(x,y,col="coral",lwd=1)
polygon(x-3,y,col="peachpuff",lwd=1)
title(main="Buone Vacanze",font.main=9,col.main="red")
log(100000,1009
log(100000,100)
library(datasets)
data(airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality)
plot(Wind, Ozone, data = airquality, geom = "smooth")
data(airquality)
qplot(Wind, Ozone, data = airquality)
plot(Wind, Ozone, data = airquality, geom = "smooth")
airquality
airquality$Month
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
g
print(g)
layout(g)
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
data(airquality)
airquality$Month
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality$Month
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
dim(airQuality)
dim(airquality)
na.omit(airquality)
dim(na.omit(airquality))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies)
?llines
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies) + stats_smooth("loess"))
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies) + geom_smooth()
url <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(url, destfile="repdata%2Fdata%2Factivity.zip")
download.file(url, destfile="A.zip")
url <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(url, destfile="A.zip")
download.file(url, destfile="A")
?downolad.file
?downoadd.file
?download.file
url <- "http://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(url, destfile="A")
download.file(url, destfile="A.zip")
unzip("A.zip", exdir="./data")
setwd("~/Dropbox/coursera/DataScienceSpecialization/ReproducibleResearch/WProject01RR")
unzip("A.zip", exdir="./data")
url <- "http://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(url, destfile="A.zip")
unzip("A.zip", exdir="./data")
getwd()
read.csv("./data/hactivity.csv")
activity=read.csv("./data/activity.csv")
dim(activity)
activity[1:10,]
activity[1:100,]
activity[1:1000,1]
setwd("~/Desktop/RepData_PeerAssessment1")
unzip("activity.zip", exdir="./data")
activity=read.csv("./data/activity.csv")
activity[1:100,]
activity[,2]
days=levels(activity[,2])
activity[1:100,]
days
tapply(sum,activity[,1],activiity[,2])
tapply(sum,activity[,1],activity[,2])
tapply(activity[,1],activity[,2],sum)
steps=tapply(activity[,1],activity[,2],sum)
dim(activity)
86400/5
24*60/5
dim(activity)
dim(activity)[1]
dim(activity)[1]/288
mean(steps)
mean(steps,na.rm=TRUE)
median(steps,na.rm=TRUE)
length(ma.omit(steps))
length(na.omit(steps))
na.omit(steps)
is.na(steps)
which(is.na(steps))
length(which(is.na(steps)))
hist(steps)
steps5=tapply(activity[,1],activity[,3],mean)
steps5
steps5=tapply(activity[,1],activity[,3],mean,na.rm=TRUE)
steps5
steps5=tapply(activity[,1],activity[,3],mean,na.rm=TRUE)
library(ggplot2)
1440/5
data.frame(steps5,seq(0,1440,5))
data.frame(steps5,seq(0,1435,5))
data.frame(steps5,seq(0,1435,5))->stepts
colnames(stepts)
minutes=seq(0,1435,5)
data.frame(steps5,minutes)->stepts
ggplot(minutes,steps5,spepts)+geom.lines()
ggplot(stepts,aes(minutes,steps5)->g
g+geom_point()
ggplot(stepts,aes(minutes,steps5)->g
ggplot(stepts,aes(minutes,steps5))->g
g+geom_point()
g+geom_lines()
ggplot(stepts,aes(minutes,steps5))->g
g+geom_lines()
g+geom_line()
which.max(stepts)
stepts
which.max(step5)
which.max(steps5)
maxsteps=5*which.max(steps5)
maxsteps
length(which(is.na(steps))
length(which(is.na(steps)))
length(which(is.na(steps)))
dim(na.omit(activity))
dim(na.omit(activity))-dim(activity)
dim(activity)-dim(na.omit(activity))-
dim(activity)-dim(na.omit(activity))
dim(activity)-dim(na.omit(activity))
8*288
